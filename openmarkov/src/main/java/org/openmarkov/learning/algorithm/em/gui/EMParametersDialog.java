/*
 * Copyright (c) CISIAD, UNED, Spain,  2019. Licensed under the GPLv3 licence
 * Unless required by applicable law or agreed to in writing,
 * this code is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OF ANY KIND.
 */

package org.openmarkov.learning.algorithm.em.gui;

import org.openmarkov.core.io.database.CaseDatabase;
import org.openmarkov.core.model.network.ProbNet;
import org.openmarkov.learning.algorithm.em.EMAlgorithm;
import org.openmarkov.learning.core.algorithm.LearningAlgorithm;
import org.openmarkov.learning.gui.AlgorithmConfiguration;
import org.openmarkov.learning.gui.AlgorithmParametersDialog;

import javax.swing.*;

/**
 * This abstract class represents the dialog that shows the user the options and
 * parameters of the hill climber algorithm.
 *
 * @author ibermejo
 */
@SuppressWarnings("serial") @AlgorithmConfiguration(algorithm = EMAlgorithm.class) public class EMParametersDialog
		extends AlgorithmParametersDialog {
	private String alphaParameter = "0.5";
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton AceptButton;
	private javax.swing.JTextField alphaText;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JPanel jPanel1;

	/**
	 * Creates new form EMOptionsGUI
	 */
	public EMParametersDialog(JFrame parent, boolean modal) {
		super(parent, modal);
		setLocationRelativeTo(parent);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		jPanel1 = new javax.swing.JPanel();
		alphaText = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		AceptButton = new javax.swing.JButton();
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Algoritmo del gradiente: Opciones");
		setResizable(false);
		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Expectation Maximization: Options"));
		alphaText.setText(alphaParameter);
		jLabel7.setText("Alpha parameter:");
		jLabel7.setToolTipText(
				"Alpha parameter used during structural learning. The parameter must be within the range [0 ,1]. A value of 1 corresponds to the Laplace correction whereas a value of 0 corresponds to using no correction at all.");
		AceptButton.setText("Ok");
		AceptButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				AceptButtonActionPerformed(evt);
			}
		});
		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGroup(
						jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
								jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel7)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(alphaText, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
												javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(
								jPanel1Layout.createSequentialGroup().addGap(102, 102, 102).addComponent(AceptButton)))
						.addContainerGap(83, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(56, 56, 56).addGroup(
						jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(alphaText, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel7))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
						.addComponent(AceptButton).addContainerGap()));
		jLabel7.getAccessibleContext().setAccessibleName("Alpha parameter:");
		jLabel7.getAccessibleContext().setAccessibleDescription(
				"Alpha parameter used during structural learning. The parameter must be within the range [0 ,1]. A value of 1 corresponds to the Laplace correction whereas a value of 0 corresponds to using no correction at all.");
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addContainerGap()
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(36, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addContainerGap()
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void AceptButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AceptButtonActionPerformed
		try {
			double alpha = Double.parseDouble(alphaText.getText());
			if ((alpha < 0) || (alpha > 1)) {
				JOptionPane.showMessageDialog(null, stringDatabase.getString("Learning.Alpha.Error"),
						stringDatabase.getString("ErrorWindow.Title.Label"), JOptionPane.ERROR_MESSAGE);
				return;
			}
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(null, stringDatabase.getString("Learning.Alpha.Error"),
					stringDatabase.getString("ErrorWindow.Title.Label"), JOptionPane.ERROR_MESSAGE);
			return;
		}
		alphaParameter = alphaText.getText();
		this.setVisible(false);
	}// GEN-LAST:event_AceptButtonActionPerformed

	public String getDescription() {
		return stringDatabase.getString("Learning.Alpha") + ": " + alphaParameter;
	}

	public String getAlphaParameter() {
		return alphaParameter;
	}

	// End of variables declaration//GEN-END:variables

	@Override public LearningAlgorithm getInstance(ProbNet probNet, CaseDatabase database) {
		return new EMAlgorithm(probNet, database, Double.parseDouble(alphaParameter));
	}
}
